{"version": "https://jsonfeed.org/version/1", "title": "Anthony's Corner", "home_page_url": "https://trunghq-02.github.io/mkdocs-blog/", "feed_url": "https://trunghq-02.github.io/mkdocs-blog/feed_json_updated.json", "description": "A blog about technology, DevOps, and personal insights.", "icon": null, "authors": [], "language": "en", "items": [{"id": "https://trunghq-02.github.io/mkdocs-blog/blog/2024/12/11/tls-termination-over-cdn-/", "url": "https://trunghq-02.github.io/mkdocs-blog/blog/2024/12/11/tls-termination-over-cdn-/", "title": "\ud83d\udd10 TLS Termination Over CDN / Proxy / Load Balancer", "content_html": "<h1>\ud83d\udd10 TLS Termination Over CDN / Proxy / Load Balancer</h1>\n<h2>\ud83e\udded Problem Statement</h2>\n<p>You have a public-facing domain (e.g., <code>example.com</code>) and want to enable HTTPS. Instead of connecting users directly to your backend servers, you place a <strong>CDN</strong>, <strong>reverse proxy</strong>, or <strong>load balancer (LB)</strong> in front of your origin infrastructure.</p>\n<p>This raises important architectural questions:</p>\n<blockquote>\n<p>Where is the TLS connection terminated?\nWhat does the client see and verify?\nHow is traffic secured between the client, proxy, and origin?\n</p>\n</blockquote>\n<p>This article clarifies the mechanics and trust boundaries when TLS is used with CDNs, proxies, or load balancers.</p>", "image": null, "date_modified": "2024-12-11T00:00:00+00:00", "authors": [{"name": "Anthony Hoang"}], "tags": null}]}