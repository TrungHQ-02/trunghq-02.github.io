{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My Blog","text":"<p>Hi there \ud83d\udc4b \u2014 I'm Anthony, and this is my little corner of the internet. Here you'll find articles, notes, and deep dives on topics I\u2019m exploring, building, and learning.</p>"},{"location":"#what-youll-find-here","title":"\ud83d\udcdd What You'll Find Here","text":"<ul> <li>Tech Notes \u2013 Practical guides, cheatsheets, and reference materials.  </li> <li>Deep Dives \u2013 Detailed breakdowns of tools, architectures, and best practices.  </li> <li>Personal Projects \u2013 Things I\u2019m tinkering with, from code experiments to side ideas.  </li> <li>Learning Logs \u2013 My journey of mastering skills, certifications, and new tech.</li> </ul>"},{"location":"#featured-posts","title":"\ud83d\udccc Featured Posts","text":""},{"location":"#why-this-blog","title":"\ud83d\ude80 Why This Blog?","text":"<p>I believe in learning in public. Writing is my way of making sense of complex ideas and leaving a trail for future me \u2014 and maybe for you too.</p>"},{"location":"#get-in-touch","title":"\ud83d\udceb Get in Touch","text":"<p>If something here sparks an idea or question, feel free to reach out:</p> <ul> <li>GitHub: github.com/TrungHQ-02</li> <li>LinkedIn: Anthony Hoang LinkedIn profile </li> <li>Email: hoangquoctrung02@hotmail.com</li> </ul> <p>\u201cThe best way to understand something is to explain it to someone else \u2014 even if that someone is yourself.\u201d</p>"},{"location":"about/","title":"About Me","text":"<p>Hi, I\u2019m Ho\u00e0ng Qu\u1ed1c Trung \u2014 a DevOps &amp; Platform Engineer passionate about building scalable, secure, and developer-friendly platforms.</p>"},{"location":"about/#what-i-do","title":"What I Do","text":"<p>I design, build, and operate cloud-native platforms that empower engineering teams and streamline operations. My core expertise includes:</p> <ul> <li>Kubernetes orchestration \u2013 EKS, self-hosted clusters, hybrid environments  </li> <li>AWS infrastructure \u2013 Landing Zones, EC2, VPC, RDS, S3, Serverless, cost optimization  </li> <li>Infrastructure as Code (IaC) \u2013 Terraform, AWS CDK, CloudFormation, Helm  </li> <li>CI/CD automation \u2013 GitHub Actions, GitLab CI, Jenkins  </li> <li>Observability solutions \u2013 Prometheus, Grafana, CloudWatch, New Relic, OpenTelemetry  </li> <li>Platform engineering \u2013 Internal Developer Platforms (IDPs), self-service provisioning portals, workflow automation  </li> </ul> <p>I\u2019ve worked on enterprise-scale initiatives, delivering:</p> <ul> <li>Self-service infrastructure provisioning for developers</li> <li>IaC governance frameworks and reusable Terraform modules</li> <li>Observability systems for hybrid Kubernetes clusters</li> <li>Platform migrations impacting thousands of repositories</li> </ul>"},{"location":"about/#achievements","title":"Achievements","text":"<ul> <li>\ud83c\udfc6 Best Rookie of the Year 2024 \u2014 one of only three recognized at FPT Software Hanoi for exceptional impact in the first year  </li> <li>\ud83c\udfaf Top 1 in Certification Race \u2014 earned multiple cloud &amp; DevOps certifications, including CKA, AWS SAA, Terraform Associate  </li> <li>\ud83c\udf93 Academic Excellence \u2014 Graduated with a CPA of 3.91/4.0, ranked second in Computer Science major at Hanoi University of Science and Technology  </li> </ul>"},{"location":"about/#personal-projects","title":"Personal Projects","text":"<ul> <li>Isolation Node Controller \u2014 Kubernetes controller providing tenant-isolated node pools, integrated with Karpenter for autoscaling  </li> <li>Project Template Generator \u2014 Rapidly bootstraps projects with built-in RBAC, authentication, pre-commit hooks, and lint rules  </li> <li>Blog Engine in Sync with Notion \u2014 Automated pipeline syncing Notion writings to an MkDocs site, deployed via GitHub Actions  </li> </ul>"},{"location":"about/#why-this-blog-exists","title":"Why This Blog Exists","text":"<p>This is my space to share:</p> <ul> <li>Engineering deep dives and platform architecture insights</li> <li>Practical DevOps tips and automation patterns</li> <li>Learnings from experiments and personal projects</li> <li>Or just, some of my thoughts :D</li> </ul> <p>I believe in building from first principles, sharing knowledge, and continuously improving \u2014 both the platforms I work on and myself as an engineer.</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/tags/","title":"Tag index  for the blog","text":""},{"location":"blog/tags/#tag:cloud","title":"cloud","text":"<ul> <li>            \ud83d\udd10 TLS Termination Over CDN / Proxy / Load Balancer          </li> </ul>"},{"location":"blog/tags/#tag:devops","title":"devops","text":"<ul> <li>            \ud83d\udd10 TLS Termination Over CDN / Proxy / Load Balancer          </li> </ul>"},{"location":"blog/tags/#tag:networking","title":"networking","text":"<ul> <li>            \ud83d\udd10 TLS Termination Over CDN / Proxy / Load Balancer          </li> </ul>"},{"location":"blog/2024/12/11/tls-termination-over-cdn-/","title":"\ud83d\udd10 TLS Termination Over CDN / Proxy / Load Balancer","text":"","tags":["networking","devops","cloud"]},{"location":"blog/2024/12/11/tls-termination-over-cdn-/#problem-statement","title":"\ud83e\udded Problem Statement","text":"<p>You have a public-facing domain (e.g., <code>example.com</code>) and want to enable HTTPS. Instead of connecting users directly to your backend servers, you place a CDN, reverse proxy, or load balancer (LB) in front of your origin infrastructure.</p> <p>This raises important architectural questions:</p> <p>Where is the TLS connection terminated? What does the client see and verify? How is traffic secured between the client, proxy, and origin? </p> <p>This article clarifies the mechanics and trust boundaries when TLS is used with CDNs, proxies, or load balancers.</p>","tags":["networking","devops","cloud"]},{"location":"blog/2024/12/11/tls-termination-over-cdn-/#diagram-of-how-things-work","title":"\ud83d\uddbc\ufe0f Diagram of how things work","text":"","tags":["networking","devops","cloud"]},{"location":"blog/2024/12/11/tls-termination-over-cdn-/#setup","title":"Setup","text":"<ul> <li> <p>DNS is configured so that:</p> <p><code>example.com \u2192 cdn.example.net (CNAME or A record)</code></p> </li> <li> <p>The CDN provider is issued an HTTPS certificate for <code>example.com</code>, and it is imported at the CDN edge.</p> <p> \ud83d\udca1 <p>Here raises a question:</p> <p>The imported cert only has the public key, then how the TLS handshake successfully happened?</p> <p>Answer: actually the CDN is loaded with the private key of the cert too.</p> <li> <p>The origin server is configured to receive traffic either via:</p> <ul> <li>Plain HTTP</li> <li>HTTPS (with its own certificate)</li> </ul> </li>","tags":["networking","devops","cloud"]},{"location":"blog/2024/12/11/tls-termination-over-cdn-/#flow","title":"Flow","text":"<p>Step-by-step process:</p> <ol> <li>Client requests <code>https://example.com</code>:<ul> <li>Browser resolves <code>example.com</code> to the CDN IP.</li> <li>Client opens a TCP connection to the CDN.</li> </ul> </li> <li>TLS Handshake begins:<ul> <li>Client includes <code>example.com</code> in the SNI (Server Name Indication) field (sent in the Client Hello)</li> <li>CDN uses the SNI to select the right certificate for <code>example.com</code>.</li> <li>CDN responds with the matching certificate (issued by a trusted CA).</li> </ul> </li> <li>TLS session established:<ul> <li>The client verifies the certificate.</li> <li>A secure channel is now established between the client and the CDN.</li> </ul> </li> <li>CDN forwards the HTTP request to the origin:<ul> <li>Over HTTP or HTTPS (depending on your config).</li> <li>Origin sees the <code>Host: example.com</code> header and serves the correct content.</li> </ul> </li> </ol>","tags":["networking","devops","cloud"]},{"location":"blog/2024/12/11/tls-termination-over-cdn-/#tls-termination-explained","title":"\ud83d\udd17 TLS Termination Explained","text":"<p>In a typical CDN/LB setup, TLS can be terminated at the edge, at the origin, or both. These options affect how secure and transparent the connection is.</p>","tags":["networking","devops","cloud"]},{"location":"blog/2024/12/11/tls-termination-over-cdn-/#client-cdn-public-tls-termination","title":"\u2705 Client \u2192 CDN (Public TLS Termination)","text":"<ul> <li>The client opens a TLS session to the CDN or proxy.</li> <li>The server presents a certificate for <code>example.com</code> u sing SNI in the Client Hello</li> <li>The client verifies the certificate and encrypts traffic.</li> </ul> <p>\ud83e\udde0 This is the only TLS session the client is aware of. The certificate must match the requested hostname.</p>","tags":["networking","devops","cloud"]},{"location":"blog/2024/12/11/tls-termination-over-cdn-/#cdn-origin-internal-communication","title":"\ud83d\udd01 CDN \u2192 Origin (Internal Communication)","text":"<p>After terminating TLS, the CDN forwards the request to the backend origin server. This internal hop can be:</p> <ul> <li>\ud83d\udd13 Plain HTTP<ul> <li>No encryption between CDN and origin</li> <li>Simpler, faster \u2014 but data is in cleartext over the internal network</li> </ul> </li> <li>\ud83d\udd12 HTTPS<ul> <li>A second TLS session is established between CDN and origin</li> <li>Increases security (useful in multi-tenant or untrusted networks)</li> </ul> </li> </ul>","tags":["networking","devops","cloud"]},{"location":"blog/2024/12/11/tls-termination-over-cdn-/#what-the-client-sees-and-doesnt-see","title":"\ud83e\udde0 What the Client Sees (and Doesn\u2019t See)","text":"Aspect Client Sees? Explanation TLS cert for <code>example.com</code> \u2705 Yes Presented by CDN or proxy during handshake Origin server\u2019s cert \u274c No Not exposed unless client connects directly Whether origin uses HTTPS \u274c No Client is unaware of internal hop details","tags":["networking","devops","cloud"]},{"location":"blog/2024/12/11/tls-termination-over-cdn-/#trust-boundaries","title":"\ud83d\udd10 Trust Boundaries","text":"Segment Who Trusts Whom TLS Required? Client \u2192 CDN Client trusts CDN\u2019s cert for domain \u2705 Always CDN \u2192 Origin CDN may validate origin cert \u2705 Optional <p>If end-to-end TLS is important (e.g., compliance, internal policy), you must enforce HTTPS from the CDN to origin and ensure the CDN trusts the origin\u2019s certificate.</p> <p>Share on  Share on </p>","tags":["networking","devops","cloud"]},{"location":"blog/archive/2024/","title":"December 2024","text":""},{"location":"blog/category/technical/","title":"Technical","text":""}]}